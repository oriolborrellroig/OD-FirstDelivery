--------- See All Objects ---------
MATCH (n)
Return n

--------- Delete All Objects ---------
MATCH (n) 
DETACH DELETE n

--------- Create Journals ---------
:auto USING PERIODIC COMMIT 500
LOAD CSV WITH HEADERS FROM 'file:///articles.csv' AS article FIELDTERMINATOR ';'
MERGE (author:Author {author_name: article.author})
MERGE (journal:Journal {journal_name: article.journal})
MERGE (volume:Volume {volume_name: article.volume})
MERGE (year:Year {year: article.year})
CREATE (paper:Paper {paper_id: article.id, paper_title: article.title, paper_mdate: article.mdate})
CREATE (author)-[:WRITES]->(paper)
CREATE (paper)-[:PUBLISHED_VOLUME]->(volume)
MERGE (volume)-[:BELONGS_JOUR]->(journal)
MERGE (volume)-[:YEAR_VOLUME]->(year)

:auto USING PERIODIC COMMIT 500
LOAD CSV WITH HEADERS FROM 'file:///articles_citations.csv' AS article FIELDTERMINATOR ';'
MATCH (paper1:Paper {paper_id: article.paperID})
MATCH (paper2:Paper {paper_id: article.cited_byID})
MERGE (paper1)-[:CITED_BY {year: article.year}]->(paper2)

--------- Create Conferences ---------
:auto USING PERIODIC COMMIT 500
LOAD CSV WITH HEADERS FROM 'file:///conferences.csv' AS article FIELDTERMINATOR ';'
MERGE (author:Author {author_name: article.author})
MERGE (conference:Conference {conference_name: article.conference})
MERGE (edition:Edition {edition_name: article.edition})
MERGE (year:Year {year: article.year})
CREATE (paper:Paper {paper_id: article.id, paper_title: article.title, paper_mdate: article.mdate})
CREATE (author)-[:WRITES]->(paper)
CREATE (paper)-[:PUBLISHED_CONF_EDITION]->(edition)
MERGE  (edition)-[:BELONGS_CONF]->(conference)
MERGE  (edition)-[:YEAR_EDITION]->(year)

:auto USING PERIODIC COMMIT 500
LOAD CSV WITH HEADERS FROM 'file:///conferences_citations.csv' AS article FIELDTERMINATOR ';'
MATCH (paper1:Paper {paper_id: article.paperID})
MATCH (paper2:Paper {paper_id: article.cited_byID})
MERGE (paper1)-[:CITED_BY {year: article.year}]->(paper2)

--------- Create Workshops ---------
:auto USING PERIODIC COMMIT 500
LOAD CSV WITH HEADERS FROM 'file:///workshops.csv' AS article FIELDTERMINATOR ';'
MERGE (author:Author {author_name: article.author})
MERGE (workshop:Workshop {workshop_name: article.conference})
MERGE (edition:Edition {edition_name: article.edition})
MERGE (year:Year {year: article.year})
CREATE (paper:Paper {paper_id: article.id, paper_title: article.title, paper_mdate: article.mdate})
CREATE (author)-[:WRITES]->(paper)
CREATE (paper)-[:PUBLISHED_WORK_EDITION]->(edition)
MERGE  (edition)-[:BELLONGS_WORK]->(workshop)
MERGE  (edition)-[:YEAR_EDITION]->(year)

:auto USING PERIODIC COMMIT 500
LOAD CSV WITH HEADERS FROM 'file:///workshops_citations.csv' AS article FIELDTERMINATOR ';'
MATCH (paper1:Paper {paper_id: article.paperID})
MATCH (paper2:Paper {paper_id: article.cited_byID})
MERGE (paper1)-[:CITED_BY {year: article.year}]->(paper2)

--------- Create Keywords ---------
:auto USING PERIODIC COMMIT 500
LOAD CSV WITH HEADERS FROM 'file:///keywords.csv' AS article FIELDTERMINATOR ';'
MERGE (keyword:Keyword {keyword: article.keywords})
MERGE (paper:Paper {paper_id: article.id})
CREATE (paper)-[:CONTAINS]->(keyword)

:auto USING PERIODIC COMMIT 500
LOAD CSV WITH HEADERS FROM 'file:///keywords_proceedings.csv' AS article FIELDTERMINATOR ';'
MERGE (keyword:Keyword {keyword: article.keywords})
MERGE (paper:Paper {paper_id: article.id})
CREATE (paper)-[:CONTAINS]->(keyword)

--------- Q1 ---------
MATCH (author:Author)-[:WRITES]->(paper1:Paper)-[paper2:CITED_BY]->()
WITH author, paper1, COUNT(paper2) AS number
ORDER BY author.author_name, number DESC
WITH author, collect(number) AS list
WITH author, list, range(1, size(list), 1) AS indexes
WITH author, reduce(hindex=0, index IN indexes |
    CASE WHEN list[index-1] >= index THEN hindex + 1 ELSE hindex END
) as hindex
RETURN author, hindex

--------- Q2 ---------
MATCH (conference:Conference)<-[:BELONGS_CONF]-(edition:Edition)<-[:PUBLISHED_CONF_EDITION]-(paper1:Paper)<-[cited:CITED_BY]-()
WITH conference, paper1, COUNT(cited) AS number
ORDER BY conference.conference_name, number DESC, paper1.paper_id
WITH conference, collect(paper1) AS paper_list
UNWIND paper_list[0..3] AS top3
RETURN conference AS conference, top3 AS paper

--------- Q3 ---------
MATCH (author:Author)-[:WRITES]->(:Paper)-[:PUBLISHED_CONF_EDITION]->(edition:Edition)-[:BELONGS_CONF]->(conference:Conference)
WITH author, conference, collect(DISTINCT edition) AS editions, size(collect(DISTINCT edition)) AS numberEditions
WHERE numberEditions>=4
RETURN conference AS conference, author AS author, editions, numberEditions

--------- Q4 ---------
MATCH (vol:Volume)-[:YEAR_VOLUME]->(y:Year)
WHERE y.year = "2018" OR y.year = "2019"
WITH vol
MATCH (journal:Journal)<-[:BELONGS_JOUR]-(vol:Volume)<-[pub:PUBLISHED_VOLUME]-(p:Paper)<-[cited:CITED_BY]-()
RETURN journal, COUNT(cited), COUNT(DISTINCT pub)